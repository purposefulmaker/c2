# Azure Authentication Service Environment Variables

# Azure AD Configuration
AZURE_CLIENT_ID=your-azure-app-client-id
AZURE_CLIENT_SECRET=your-azure-app-client-secret  
AZURE_TENANT_ID=your-azure-tenant-id
AZURE_REDIRECT_URI=http://localhost:8085/auth/azure/callback

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-in-production

# Session Configuration  
SESSION_SECRET=your-session-secret-key-change-in-production

# Cookie Encryption Keys
COOKIE_ENCRYPTION_KEY_1=your-cookie-encryption-key-1
COOKIE_ENCRYPTION_IV_1=your-cookie-encryption-iv-1
COOKIE_ENCRYPTION_KEY_2=your-cookie-encryption-key-2
COOKIE_ENCRYPTION_IV_2=your-cookie-encryption-iv-2

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# Frontend URL for CORS and redirects
FRONTEND_URL=http://localhost:3000

# Environment
NODE_ENV=development

# Initial Setup Controls
# One-time token to authorize calling /setup/azure for first-time configuration
SETUP_TOKEN=change-me-strong-random
# Allow re-running setup after completion (set to 'true' only temporarily)
ALLOW_SETUP_RECONFIG=false

# Bootstrap Super Admins (comma-separated emails)
ADMIN_EMAILS=

# Notes:
# - In Docker, set REDIS_HOST=dragonfly (or your Redis service name)
# - /setup/azure accepts JSON: { clientId, clientSecret, tenantId, redirectUri, scopes, roleMappings, adminEmails }
# - roleMappings example: [{"azureGroupId":"<AAD Group Object ID>","roleName":"SYSTEM_ADMIN"}]

mportant environment variables
For the auth service:

AZURE_CLIENT_ID
AZURE_CLIENT_SECRET
AZURE_TENANT_ID
AZURE_REDIRECT_URI (default: http://localhost:8085/auth/azure/callback)
JWT_SECRET
SESSION_SECRET
REDIS_HOST (should be dragonfly in Docker)
REDIS_PORT (default 6379)
FRONTEND_URL (default http://localhost:3000)
ADMIN_EMAILS (comma-separated list to bootstrap super admins)